# Generated by Django 2.1.4 on 2019-02-20 06:57

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Good',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('good_name', models.CharField(max_length=255, verbose_name='闲置名称')),
                ('good_description', models.CharField(max_length=100, verbose_name='闲置描述')),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
                ('plat', models.CharField(max_length=255, verbose_name='闲置类型')),
                ('views', models.PositiveIntegerField(default=0)),
                ('price', models.CharField(max_length=100, verbose_name='闲置价格')),
                ('online', models.IntegerField(choices=[(1, '支持'), (2, '不支持')], default=1, verbose_name='包邮')),
                ('lower', models.IntegerField(choices=[(1, '支持'), (2, '不支持')], default=1, verbose_name='议价')),
                ('good_photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='图片')),
                ('starter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.UserInfo')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='love',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('loved', models.BooleanField(default=False, verbose_name='收藏')),
                ('type', models.IntegerField(choices=[(1, '商品'), (2, '发布者')], default=1, verbose_name='收藏类型')),
                ('good_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plat.Good', verbose_name='物品')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.UserInfo', verbose_name='姓名')),
            ],
        ),
        migrations.CreateModel(
            name='Plat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plat_name', models.CharField(max_length=30, unique=True)),
                ('plat_description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(max_length=4000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.UserInfo')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plat.Good')),
            ],
        ),
        migrations.CreateModel(
            name='PostReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_comment_replies', to='accounts.UserInfo')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_replies', to='plat.Post')),
                ('to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_replied', to='accounts.UserInfo')),
            ],
        ),
    ]
